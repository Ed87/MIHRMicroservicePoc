// <auto-generated />
using System;
using EmployeesAPIService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeesAPIService.Migrations
{
    [DbContext(typeof(HRMSContext))]
    partial class HRMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeesAPIService.Domain.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int?>("DepartmentID");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("MiddleName");

                    b.Property<int>("RecruitmentRequisitionID");

                    b.Property<string>("Sex")
                        .IsRequired();

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("RecruitmentRequisitionID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.JobGrade", b =>
                {
                    b.Property<int>("JobGradeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobGradeName");

                    b.HasKey("JobGradeID");

                    b.ToTable("JobGrade");
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.JobTitle", b =>
                {
                    b.Property<int>("JobTitleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.HasKey("JobTitleID");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.RecruitmentRequisition", b =>
                {
                    b.Property<int>("RecruitmentRequisitionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID");

                    b.Property<int>("JobGradeID");

                    b.Property<int>("JobTitleID");

                    b.Property<int>("Quantity");

                    b.HasKey("RecruitmentRequisitionID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobGradeID");

                    b.HasIndex("JobTitleID");

                    b.ToTable("RecruitmentRequisition");
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.Employee", b =>
                {
                    b.HasOne("EmployeesAPIService.Domain.Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EmployeesAPIService.Domain.RecruitmentRequisition", "RecruitmentRequisition")
                        .WithMany()
                        .HasForeignKey("RecruitmentRequisitionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EmployeesAPIService.Domain.RecruitmentRequisition", b =>
                {
                    b.HasOne("EmployeesAPIService.Domain.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesAPIService.Domain.JobGrade", "JobGrade")
                        .WithMany()
                        .HasForeignKey("JobGradeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesAPIService.Domain.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
